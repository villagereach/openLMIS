<% form_tag do %>
  <%= render :partial => 'errors', :locals => { :errors => @errors } %>

  <%- if @inventories.any?{|i| !i.errors.empty?} -%>
  <div id="error">
    <%= @inventories.reject{|i| i.errors.empty?}.each{|i| i.errors.full_message} %>
  </div>
  <%- end -%>

<p class="note"><%= h(t("visits.nr_instructions")) %></p>

<%- packages = Package.active.select { |p| Inventory.directly_collected_types.any? { |t| p.inventoried_by_type?(t, @screen) } } -%> 
<%- types = Inventory.directly_collected_types.select { |t| packages.any? { |p| p.inventoried_by_type?(t, @screen) } } -%>

<%- fields_for :inventory do |f| -%>
<table class="inventory spreadsheet">
  <thead>
    <tr>
      <th><%= h(t("visits.health_center_inventory.#{@screen}.product_header")) %></th>
      <th><%= h(t(".ideal_quantity")) %></th>
      <%- types.each do |t| -%>
      <th><%= h(t(".#{t}")) %></th>
      <%- end -%>
      </tr>
  </thead>
  <%- packages.sort.partition_by{|package| package.product.product_type_code}.each do |type, stocks| -%>
    <tbody>
      <%- stocks.sort.each do |package| -%>
        <%- index = package.code -%>
        <tr>
          <th><%= h package.label %></th>
          <td class="static"><%= h(number_with_delimiter( @stock[:ideal][index] )) if @stock[:ideal][index] %></td>
          <%- types.each do |t| -%>
            <td>
              <%- if package.inventoried_by_type?(t, @screen) -%>
                <%- stock_value = default_field_value(params[:inventory], index.to_s, t, @stock[t][index].quantity) -%>
                <%- nr_checked = !@stock[t][index].new_record? && default_field_value(params[:inventory], index.to_s, "#{t}/NR", stock_value.to_s.empty? ? '1' : '0') == '1' -%>
                <%= nr_field(f, t,  index, stock_value,  nr_checked,  (@errors[index][t].on(:quantity) rescue nil), !Inventory.nullable_types.include?(t)) %>
              <%- end -%>
            </td>
          <%- end -%>
        </tr>
      <%- end -%>
    </tbody>
  <%- end %>
</table>

<%- end -%>
<%= save_and_continue %>
<%- end -%>
